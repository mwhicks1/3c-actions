# This file is generated by generate-workflow.py. To update this file, update
# generate-workflow.py instead and re-run it. Some things in this file are
# explained by comments in generate-workflow.py.

name: Exhaustive testing and Performance Stats

on:
  # Run every day at the following time.
  schedule:
    - cron: "0 9 * * *"
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch or commit ID of correctcomputation/checkedc-clang to run workflow on"
        required: true
        default: "main"

env:
  benchmark_tar_dir: "/home/github/checkedc-benchmarks"
  builddir: "${{github.workspace}}/b/ninja"
  benchmark_conv_dir: "${{github.workspace}}/benchmark_conv"
  branch_for_scheduled_run: "main"
  include_dir: "${{github.workspace}}/depsfolder/checkedc-clang/llvm/projects/checkedc-wrapper/checkedc/include"
  port_tools: "${{github.workspace}}/depsfolder/checkedc-clang/clang/tools/3c/utils/port_tools"
  checkedc_hdr_repo: "https://github.com/correctcomputation/checkedc"

jobs:

  # Cleanup files left behind by prior runs
  clean:
    name: Clean
    runs-on: self-hosted
    steps:
      - name: Clean
        run: |
          rm -rf ${{env.benchmark_conv_dir}}
          mkdir -p ${{env.benchmark_conv_dir}}
          rm -rf ${{env.builddir}}
          mkdir -p ${{env.builddir}}
          rm -rf ${{github.workspace}}/depsfolder
          mkdir -p ${{github.workspace}}/depsfolder

  # Clone and build 3c and clang
  # (clang is needed to test compilation of converted benchmarks.)
  build_3c:
    name: Build 3c and clang
    needs: clean
    runs-on: self-hosted
    steps:
      - name: Check out the actions repository
        uses: actions/checkout@v2
        with:
          path: depsfolder/actions
      - name: Check that the workflow file is up to date with generate-workflow.py before running it
        run: |
          cd ${{github.workspace}}/depsfolder/actions
          ./generate-workflow.py
          git diff --exit-code

      - name: Branch or commit ID
        run: echo "${{ github.event.inputs.branch || env.branch_for_scheduled_run }}"
      - name: Check out the 3C repository and the Checked C system headers
        run: |
          git init ${{github.workspace}}/depsfolder/checkedc-clang
          cd ${{github.workspace}}/depsfolder/checkedc-clang
          git remote add origin https://github.com/correctcomputation/checkedc-clang
          git fetch --depth 1 origin "${{ github.event.inputs.branch || env.branch_for_scheduled_run }}"
          git checkout FETCH_HEAD
          git clone --depth 1 ${{env.checkedc_hdr_repo}} ${{github.workspace}}/depsfolder/checkedc-clang/llvm/projects/checkedc-wrapper/checkedc

      - name: Build 3c and clang
        run: |
          cd ${{env.builddir}}
          # We'll be running the tools enough that it's worth spending the extra
          # time for an optimized build, and the easiest way to do that is to
          # use a "release" build. But we do want assertions and we do want
          # debug info in order to get symbols in assertion stack traces, so we
          # use -DLLVM_ENABLE_ASSERTIONS=ON and the RelWithDebInfo build type,
          # respectively. Furthermore, the tools rely on the llvm-symbolizer
          # helper program to actually read the debug info and generate the
          # symbolized stack trace when an assertion failure occurs. We could
          # build it here, but as of 2021-03-15, we just use Ubuntu's version
          # installed systemwide; it seems that llvm-symbolizer is a generic
          # tool and the difference in versions does not matter.
          cmake -G Ninja \
            -DLLVM_TARGETS_TO_BUILD=X86 \
            -DCMAKE_BUILD_TYPE="RelWithDebInfo" \
            -DLLVM_ENABLE_ASSERTIONS=ON \
            -DLLVM_OPTIMIZED_TABLEGEN=ON \
            -DLLVM_USE_SPLIT_DWARF=ON \
            -DLLVM_ENABLE_PROJECTS="clang" \
            ${{github.workspace}}/depsfolder/checkedc-clang/llvm
          ninja -l $(nproc) 3c clang
          chmod -R 777 ${{github.workspace}}/depsfolder
          chmod -R 777 ${{env.builddir}}

  # Run Test for 3C
  test_3c:
    name: 3C regression tests
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: 3C regression tests
        run: |
          cd ${{env.builddir}}
          ninja -l $(nproc) check-3c

  # Convert our benchmark programs

  test_vsftpd_no_expand_macros_no_alltypes:
    name: Test Vsftpd (not macro-expanded, no -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Vsftpd
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/vsftpd-3.0.3.tar.gz
          cd vsftpd-3.0.3
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion"

      - name: Convert Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/vsftpd-3.0.3
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --project_path .

      - name: Copy 3c stats of Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/vsftpd-3.0.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Vsftpd
        uses: actions/upload-artifact@v2
        with:
          name: Vsftpd_no_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/vsftpd-3.0.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/vsftpd-3.0.3
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion" -k

  test_vsftpd_no_expand_macros_alltypes_only_g_sol:
    name: Test Vsftpd (not macro-expanded, -alltypes, greatest solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Vsftpd
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/vsftpd-3.0.3.tar.gz
          cd vsftpd-3.0.3
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion"

      - name: Convert Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/vsftpd-3.0.3
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-g-sol \
            --project_path .

      - name: Copy 3c stats of Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/vsftpd-3.0.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Vsftpd
        uses: actions/upload-artifact@v2
        with:
          name: Vsftpd_no_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/vsftpd-3.0.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted Vsftpd (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/vsftpd-3.0.3
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion" -k || true

  test_vsftpd_no_expand_macros_alltypes_only_l_sol:
    name: Test Vsftpd (not macro-expanded, -alltypes, least solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Vsftpd
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/vsftpd-3.0.3.tar.gz
          cd vsftpd-3.0.3
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion"

      - name: Convert Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/vsftpd-3.0.3
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-l-sol \
            --project_path .

      - name: Copy 3c stats of Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/vsftpd-3.0.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Vsftpd
        uses: actions/upload-artifact@v2
        with:
          name: Vsftpd_no_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/vsftpd-3.0.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted Vsftpd (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/vsftpd-3.0.3
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion" -k || true

  test_vsftpd_no_expand_macros_alltypes_disable_rds:
    name: Test Vsftpd (not macro-expanded, -alltypes, CCured solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Vsftpd
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds
          tar -xvzf ${{env.benchmark_tar_dir}}/vsftpd-3.0.3.tar.gz
          cd vsftpd-3.0.3
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion"

      - name: Convert Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/vsftpd-3.0.3
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-disable-rds \
            --project_path .

      - name: Copy 3c stats of Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/vsftpd-3.0.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Vsftpd
        uses: actions/upload-artifact@v2
        with:
          name: Vsftpd_no_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/vsftpd-3.0.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted Vsftpd (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/vsftpd-3.0.3
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion" -k || true

  test_vsftpd_no_expand_macros_alltypes:
    name: Test Vsftpd (not macro-expanded, -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Vsftpd
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/vsftpd-3.0.3.tar.gz
          cd vsftpd-3.0.3
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion"

      - name: Convert Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/vsftpd-3.0.3
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --project_path .

      - name: Copy 3c stats of Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/vsftpd-3.0.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Vsftpd
        uses: actions/upload-artifact@v2
        with:
          name: Vsftpd_no_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/vsftpd-3.0.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted Vsftpd (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/vsftpd-3.0.3
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion" -k || true

  test_vsftpd_expand_macros_no_alltypes:
    name: Test Vsftpd (macro-expanded, no -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Vsftpd
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/vsftpd-3.0.3.tar.gz
          cd vsftpd-3.0.3
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion"

      - name: Convert Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/vsftpd-3.0.3
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --expand_macros_before_conversion \
            --project_path .

      - name: Copy 3c stats of Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/vsftpd-3.0.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Vsftpd
        uses: actions/upload-artifact@v2
        with:
          name: Vsftpd_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/vsftpd-3.0.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/vsftpd-3.0.3
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion" -k

  test_vsftpd_expand_macros_alltypes_only_g_sol:
    name: Test Vsftpd (macro-expanded, -alltypes, greatest solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Vsftpd
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/vsftpd-3.0.3.tar.gz
          cd vsftpd-3.0.3
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion"

      - name: Convert Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/vsftpd-3.0.3
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-g-sol \
            --project_path .

      - name: Copy 3c stats of Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/vsftpd-3.0.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Vsftpd
        uses: actions/upload-artifact@v2
        with:
          name: Vsftpd_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/vsftpd-3.0.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted Vsftpd (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/vsftpd-3.0.3
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion" -k || true

  test_vsftpd_expand_macros_alltypes_only_l_sol:
    name: Test Vsftpd (macro-expanded, -alltypes, least solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Vsftpd
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/vsftpd-3.0.3.tar.gz
          cd vsftpd-3.0.3
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion"

      - name: Convert Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/vsftpd-3.0.3
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-l-sol \
            --project_path .

      - name: Copy 3c stats of Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/vsftpd-3.0.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Vsftpd
        uses: actions/upload-artifact@v2
        with:
          name: Vsftpd_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/vsftpd-3.0.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted Vsftpd (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/vsftpd-3.0.3
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion" -k || true

  test_vsftpd_expand_macros_alltypes_disable_rds:
    name: Test Vsftpd (macro-expanded, -alltypes, CCured solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Vsftpd
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds
          tar -xvzf ${{env.benchmark_tar_dir}}/vsftpd-3.0.3.tar.gz
          cd vsftpd-3.0.3
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion"

      - name: Convert Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/vsftpd-3.0.3
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-disable-rds \
            --project_path .

      - name: Copy 3c stats of Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/vsftpd-3.0.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Vsftpd
        uses: actions/upload-artifact@v2
        with:
          name: Vsftpd_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/vsftpd-3.0.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted Vsftpd (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/vsftpd-3.0.3
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion" -k || true

  test_vsftpd_expand_macros_alltypes:
    name: Test Vsftpd (macro-expanded, -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Vsftpd
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/vsftpd-3.0.3.tar.gz
          cd vsftpd-3.0.3
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion"

      - name: Convert Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/vsftpd-3.0.3
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --project_path .

      - name: Copy 3c stats of Vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/vsftpd-3.0.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Vsftpd
        uses: actions/upload-artifact@v2
        with:
          name: Vsftpd_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes/vsftpd-3.0.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted Vsftpd (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/vsftpd-3.0.3
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang -Wno-enum-conversion" -k || true

  test_ptrdist_no_expand_macros_no_alltypes:
    name: Test PtrDist (not macro-expanded, no -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build PtrDist
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/ptrdist-1.1.tar.gz
          cd ptrdist-1.1
          ( cd yacr2 ; \
            for header in *.h  ; do
              src="$(basename "$header" .h).c"
              new_header="$(basename "$header" .h)_code.h"
              test -e "$src" || continue
              cp "$header" "$new_header"
              sed -i "s/#include \"$header\"/#include \"$new_header\"/" "$src"
            done )
          for i in anagram bc ft ks yacr2 ; do \
            (cd $i ; bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" LOCAL_CFLAGS="-D_ISOC99_SOURCE") \
          done

      - name: Convert anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/anagram
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --project_path .

      - name: Copy 3c stats of anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/anagram
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of anagram
        uses: actions/upload-artifact@v2
        with:
          name: anagram_no_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/anagram/3c_performance_stats/
          retention-days: 5

      - name: Build converted anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/anagram
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE"

      - name: Convert bc
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/bc
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --project_path .

      - name: Copy 3c stats of bc
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/bc
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of bc
        uses: actions/upload-artifact@v2
        with:
          name: bc_no_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/bc/3c_performance_stats/
          retention-days: 5

      - name: Build converted bc
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/bc
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE"

      - name: Convert ft
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/ft
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --project_path .

      - name: Copy 3c stats of ft
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/ft
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ft
        uses: actions/upload-artifact@v2
        with:
          name: ft_no_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/ft/3c_performance_stats/
          retention-days: 5

      - name: Build converted ft
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/ft
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE"

      - name: Convert ks
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/ks
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --project_path .

      - name: Copy 3c stats of ks
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/ks
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ks
        uses: actions/upload-artifact@v2
        with:
          name: ks_no_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/ks/3c_performance_stats/
          retention-days: 5

      - name: Build converted ks
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/ks
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE"

      - name: Convert yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/yacr2
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --project_path .

      - name: Copy 3c stats of yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/yacr2
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of yacr2
        uses: actions/upload-artifact@v2
        with:
          name: yacr2_no_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/yacr2/3c_performance_stats/
          retention-days: 5

      - name: Build converted yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/ptrdist-1.1/yacr2
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE"

  test_ptrdist_no_expand_macros_alltypes_only_g_sol:
    name: Test PtrDist (not macro-expanded, -alltypes, greatest solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build PtrDist
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/ptrdist-1.1.tar.gz
          cd ptrdist-1.1
          ( cd yacr2 ; \
            for header in *.h  ; do
              src="$(basename "$header" .h).c"
              new_header="$(basename "$header" .h)_code.h"
              test -e "$src" || continue
              cp "$header" "$new_header"
              sed -i "s/#include \"$header\"/#include \"$new_header\"/" "$src"
            done )
          for i in anagram bc ft ks yacr2 ; do \
            (cd $i ; bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" LOCAL_CFLAGS="-D_ISOC99_SOURCE") \
          done

      - name: Convert anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/anagram
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-g-sol \
            --project_path .

      - name: Copy 3c stats of anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/anagram
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of anagram
        uses: actions/upload-artifact@v2
        with:
          name: anagram_no_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/anagram/3c_performance_stats/
          retention-days: 5

      - name: Build converted anagram (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/anagram
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert bc
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/bc
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-g-sol \
            --project_path .

      - name: Copy 3c stats of bc
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/bc
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of bc
        uses: actions/upload-artifact@v2
        with:
          name: bc_no_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/bc/3c_performance_stats/
          retention-days: 5

      - name: Build converted bc (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/bc
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert ft
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/ft
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-g-sol \
            --project_path .

      - name: Copy 3c stats of ft
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/ft
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ft
        uses: actions/upload-artifact@v2
        with:
          name: ft_no_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/ft/3c_performance_stats/
          retention-days: 5

      - name: Build converted ft (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/ft
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert ks
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/ks
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-g-sol \
            --project_path .

      - name: Copy 3c stats of ks
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/ks
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ks
        uses: actions/upload-artifact@v2
        with:
          name: ks_no_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/ks/3c_performance_stats/
          retention-days: 5

      - name: Build converted ks (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/ks
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/yacr2
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-g-sol \
            --project_path .

      - name: Copy 3c stats of yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/yacr2
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of yacr2
        uses: actions/upload-artifact@v2
        with:
          name: yacr2_no_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/yacr2/3c_performance_stats/
          retention-days: 5

      - name: Build converted yacr2 (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/ptrdist-1.1/yacr2
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

  test_ptrdist_no_expand_macros_alltypes_only_l_sol:
    name: Test PtrDist (not macro-expanded, -alltypes, least solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build PtrDist
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/ptrdist-1.1.tar.gz
          cd ptrdist-1.1
          ( cd yacr2 ; \
            for header in *.h  ; do
              src="$(basename "$header" .h).c"
              new_header="$(basename "$header" .h)_code.h"
              test -e "$src" || continue
              cp "$header" "$new_header"
              sed -i "s/#include \"$header\"/#include \"$new_header\"/" "$src"
            done )
          for i in anagram bc ft ks yacr2 ; do \
            (cd $i ; bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" LOCAL_CFLAGS="-D_ISOC99_SOURCE") \
          done

      - name: Convert anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/anagram
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-l-sol \
            --project_path .

      - name: Copy 3c stats of anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/anagram
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of anagram
        uses: actions/upload-artifact@v2
        with:
          name: anagram_no_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/anagram/3c_performance_stats/
          retention-days: 5

      - name: Build converted anagram (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/anagram
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert bc
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/bc
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-l-sol \
            --project_path .

      - name: Copy 3c stats of bc
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/bc
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of bc
        uses: actions/upload-artifact@v2
        with:
          name: bc_no_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/bc/3c_performance_stats/
          retention-days: 5

      - name: Build converted bc (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/bc
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert ft
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/ft
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-l-sol \
            --project_path .

      - name: Copy 3c stats of ft
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/ft
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ft
        uses: actions/upload-artifact@v2
        with:
          name: ft_no_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/ft/3c_performance_stats/
          retention-days: 5

      - name: Build converted ft (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/ft
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert ks
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/ks
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-l-sol \
            --project_path .

      - name: Copy 3c stats of ks
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/ks
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ks
        uses: actions/upload-artifact@v2
        with:
          name: ks_no_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/ks/3c_performance_stats/
          retention-days: 5

      - name: Build converted ks (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/ks
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/yacr2
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-l-sol \
            --project_path .

      - name: Copy 3c stats of yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/yacr2
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of yacr2
        uses: actions/upload-artifact@v2
        with:
          name: yacr2_no_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/yacr2/3c_performance_stats/
          retention-days: 5

      - name: Build converted yacr2 (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/ptrdist-1.1/yacr2
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

  test_ptrdist_no_expand_macros_alltypes_disable_rds:
    name: Test PtrDist (not macro-expanded, -alltypes, CCured solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build PtrDist
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds
          tar -xvzf ${{env.benchmark_tar_dir}}/ptrdist-1.1.tar.gz
          cd ptrdist-1.1
          ( cd yacr2 ; \
            for header in *.h  ; do
              src="$(basename "$header" .h).c"
              new_header="$(basename "$header" .h)_code.h"
              test -e "$src" || continue
              cp "$header" "$new_header"
              sed -i "s/#include \"$header\"/#include \"$new_header\"/" "$src"
            done )
          for i in anagram bc ft ks yacr2 ; do \
            (cd $i ; bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" LOCAL_CFLAGS="-D_ISOC99_SOURCE") \
          done

      - name: Convert anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/anagram
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-disable-rds \
            --project_path .

      - name: Copy 3c stats of anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/anagram
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of anagram
        uses: actions/upload-artifact@v2
        with:
          name: anagram_no_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/anagram/3c_performance_stats/
          retention-days: 5

      - name: Build converted anagram (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/anagram
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert bc
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/bc
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-disable-rds \
            --project_path .

      - name: Copy 3c stats of bc
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/bc
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of bc
        uses: actions/upload-artifact@v2
        with:
          name: bc_no_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/bc/3c_performance_stats/
          retention-days: 5

      - name: Build converted bc (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/bc
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert ft
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/ft
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-disable-rds \
            --project_path .

      - name: Copy 3c stats of ft
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/ft
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ft
        uses: actions/upload-artifact@v2
        with:
          name: ft_no_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/ft/3c_performance_stats/
          retention-days: 5

      - name: Build converted ft (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/ft
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert ks
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/ks
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-disable-rds \
            --project_path .

      - name: Copy 3c stats of ks
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/ks
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ks
        uses: actions/upload-artifact@v2
        with:
          name: ks_no_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/ks/3c_performance_stats/
          retention-days: 5

      - name: Build converted ks (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/ks
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/yacr2
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-disable-rds \
            --project_path .

      - name: Copy 3c stats of yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/yacr2
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of yacr2
        uses: actions/upload-artifact@v2
        with:
          name: yacr2_no_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/yacr2/3c_performance_stats/
          retention-days: 5

      - name: Build converted yacr2 (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/ptrdist-1.1/yacr2
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

  test_ptrdist_no_expand_macros_alltypes:
    name: Test PtrDist (not macro-expanded, -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build PtrDist
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/ptrdist-1.1.tar.gz
          cd ptrdist-1.1
          ( cd yacr2 ; \
            for header in *.h  ; do
              src="$(basename "$header" .h).c"
              new_header="$(basename "$header" .h)_code.h"
              test -e "$src" || continue
              cp "$header" "$new_header"
              sed -i "s/#include \"$header\"/#include \"$new_header\"/" "$src"
            done )
          for i in anagram bc ft ks yacr2 ; do \
            (cd $i ; bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" LOCAL_CFLAGS="-D_ISOC99_SOURCE") \
          done

      - name: Convert anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/anagram
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --project_path .

      - name: Copy 3c stats of anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/anagram
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of anagram
        uses: actions/upload-artifact@v2
        with:
          name: anagram_no_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/anagram/3c_performance_stats/
          retention-days: 5

      - name: Build converted anagram (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/anagram
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert bc
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/bc
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --project_path .

      - name: Copy 3c stats of bc
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/bc
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of bc
        uses: actions/upload-artifact@v2
        with:
          name: bc_no_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/bc/3c_performance_stats/
          retention-days: 5

      - name: Build converted bc (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/bc
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert ft
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/ft
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --project_path .

      - name: Copy 3c stats of ft
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/ft
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ft
        uses: actions/upload-artifact@v2
        with:
          name: ft_no_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/ft/3c_performance_stats/
          retention-days: 5

      - name: Build converted ft (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/ft
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert ks
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/ks
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --project_path .

      - name: Copy 3c stats of ks
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/ks
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ks
        uses: actions/upload-artifact@v2
        with:
          name: ks_no_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/ks/3c_performance_stats/
          retention-days: 5

      - name: Build converted ks (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/ks
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/yacr2
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --project_path .

      - name: Copy 3c stats of yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/yacr2
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of yacr2
        uses: actions/upload-artifact@v2
        with:
          name: yacr2_no_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/yacr2/3c_performance_stats/
          retention-days: 5

      - name: Build converted yacr2 (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/ptrdist-1.1/yacr2
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

  test_ptrdist_expand_macros_no_alltypes:
    name: Test PtrDist (macro-expanded, no -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build PtrDist
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/ptrdist-1.1.tar.gz
          cd ptrdist-1.1
          ( cd yacr2 ; \
            for header in *.h  ; do
              src="$(basename "$header" .h).c"
              new_header="$(basename "$header" .h)_code.h"
              test -e "$src" || continue
              cp "$header" "$new_header"
              sed -i "s/#include \"$header\"/#include \"$new_header\"/" "$src"
            done )
          for i in anagram bc ft ks yacr2 ; do \
            (cd $i ; bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" LOCAL_CFLAGS="-D_ISOC99_SOURCE") \
          done

      - name: Convert anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/anagram
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --expand_macros_before_conversion \
            --project_path .

      - name: Copy 3c stats of anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/anagram
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of anagram
        uses: actions/upload-artifact@v2
        with:
          name: anagram_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/anagram/3c_performance_stats/
          retention-days: 5

      - name: Build converted anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/anagram
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE"

      - name: Convert bc
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/bc
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --expand_macros_before_conversion \
            --project_path .

      - name: Copy 3c stats of bc
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/bc
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of bc
        uses: actions/upload-artifact@v2
        with:
          name: bc_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/bc/3c_performance_stats/
          retention-days: 5

      - name: Build converted bc
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/bc
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE"

      - name: Convert ft
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/ft
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --expand_macros_before_conversion \
            --project_path .

      - name: Copy 3c stats of ft
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/ft
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ft
        uses: actions/upload-artifact@v2
        with:
          name: ft_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/ft/3c_performance_stats/
          retention-days: 5

      - name: Build converted ft
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/ft
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE"

      - name: Convert ks
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/ks
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --expand_macros_before_conversion \
            --project_path .

      - name: Copy 3c stats of ks
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/ks
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ks
        uses: actions/upload-artifact@v2
        with:
          name: ks_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/ks/3c_performance_stats/
          retention-days: 5

      - name: Build converted ks
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/ks
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE"

      - name: Convert yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/yacr2
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --expand_macros_before_conversion \
            --project_path .

      - name: Copy 3c stats of yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/yacr2
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of yacr2
        uses: actions/upload-artifact@v2
        with:
          name: yacr2_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/yacr2/3c_performance_stats/
          retention-days: 5

      - name: Build converted yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/ptrdist-1.1/yacr2
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE"

  test_ptrdist_expand_macros_alltypes_only_g_sol:
    name: Test PtrDist (macro-expanded, -alltypes, greatest solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build PtrDist
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/ptrdist-1.1.tar.gz
          cd ptrdist-1.1
          ( cd yacr2 ; \
            for header in *.h  ; do
              src="$(basename "$header" .h).c"
              new_header="$(basename "$header" .h)_code.h"
              test -e "$src" || continue
              cp "$header" "$new_header"
              sed -i "s/#include \"$header\"/#include \"$new_header\"/" "$src"
            done )
          for i in anagram bc ft ks yacr2 ; do \
            (cd $i ; bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" LOCAL_CFLAGS="-D_ISOC99_SOURCE") \
          done

      - name: Convert anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/anagram
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-g-sol \
            --project_path .

      - name: Copy 3c stats of anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/anagram
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of anagram
        uses: actions/upload-artifact@v2
        with:
          name: anagram_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/anagram/3c_performance_stats/
          retention-days: 5

      - name: Build converted anagram (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/anagram
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert bc
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/bc
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-g-sol \
            --project_path .

      - name: Copy 3c stats of bc
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/bc
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of bc
        uses: actions/upload-artifact@v2
        with:
          name: bc_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/bc/3c_performance_stats/
          retention-days: 5

      - name: Build converted bc (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/bc
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert ft
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/ft
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-g-sol \
            --project_path .

      - name: Copy 3c stats of ft
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/ft
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ft
        uses: actions/upload-artifact@v2
        with:
          name: ft_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/ft/3c_performance_stats/
          retention-days: 5

      - name: Build converted ft (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/ft
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert ks
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/ks
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-g-sol \
            --project_path .

      - name: Copy 3c stats of ks
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/ks
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ks
        uses: actions/upload-artifact@v2
        with:
          name: ks_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/ks/3c_performance_stats/
          retention-days: 5

      - name: Build converted ks (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/ks
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/yacr2
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-g-sol \
            --project_path .

      - name: Copy 3c stats of yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/yacr2
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of yacr2
        uses: actions/upload-artifact@v2
        with:
          name: yacr2_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/yacr2/3c_performance_stats/
          retention-days: 5

      - name: Build converted yacr2 (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/ptrdist-1.1/yacr2
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

  test_ptrdist_expand_macros_alltypes_only_l_sol:
    name: Test PtrDist (macro-expanded, -alltypes, least solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build PtrDist
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/ptrdist-1.1.tar.gz
          cd ptrdist-1.1
          ( cd yacr2 ; \
            for header in *.h  ; do
              src="$(basename "$header" .h).c"
              new_header="$(basename "$header" .h)_code.h"
              test -e "$src" || continue
              cp "$header" "$new_header"
              sed -i "s/#include \"$header\"/#include \"$new_header\"/" "$src"
            done )
          for i in anagram bc ft ks yacr2 ; do \
            (cd $i ; bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" LOCAL_CFLAGS="-D_ISOC99_SOURCE") \
          done

      - name: Convert anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/anagram
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-l-sol \
            --project_path .

      - name: Copy 3c stats of anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/anagram
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of anagram
        uses: actions/upload-artifact@v2
        with:
          name: anagram_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/anagram/3c_performance_stats/
          retention-days: 5

      - name: Build converted anagram (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/anagram
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert bc
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/bc
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-l-sol \
            --project_path .

      - name: Copy 3c stats of bc
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/bc
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of bc
        uses: actions/upload-artifact@v2
        with:
          name: bc_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/bc/3c_performance_stats/
          retention-days: 5

      - name: Build converted bc (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/bc
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert ft
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/ft
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-l-sol \
            --project_path .

      - name: Copy 3c stats of ft
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/ft
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ft
        uses: actions/upload-artifact@v2
        with:
          name: ft_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/ft/3c_performance_stats/
          retention-days: 5

      - name: Build converted ft (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/ft
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert ks
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/ks
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-l-sol \
            --project_path .

      - name: Copy 3c stats of ks
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/ks
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ks
        uses: actions/upload-artifact@v2
        with:
          name: ks_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/ks/3c_performance_stats/
          retention-days: 5

      - name: Build converted ks (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/ks
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/yacr2
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-l-sol \
            --project_path .

      - name: Copy 3c stats of yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/yacr2
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of yacr2
        uses: actions/upload-artifact@v2
        with:
          name: yacr2_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/yacr2/3c_performance_stats/
          retention-days: 5

      - name: Build converted yacr2 (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/ptrdist-1.1/yacr2
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

  test_ptrdist_expand_macros_alltypes_disable_rds:
    name: Test PtrDist (macro-expanded, -alltypes, CCured solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build PtrDist
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds
          tar -xvzf ${{env.benchmark_tar_dir}}/ptrdist-1.1.tar.gz
          cd ptrdist-1.1
          ( cd yacr2 ; \
            for header in *.h  ; do
              src="$(basename "$header" .h).c"
              new_header="$(basename "$header" .h)_code.h"
              test -e "$src" || continue
              cp "$header" "$new_header"
              sed -i "s/#include \"$header\"/#include \"$new_header\"/" "$src"
            done )
          for i in anagram bc ft ks yacr2 ; do \
            (cd $i ; bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" LOCAL_CFLAGS="-D_ISOC99_SOURCE") \
          done

      - name: Convert anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/anagram
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-disable-rds \
            --project_path .

      - name: Copy 3c stats of anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/anagram
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of anagram
        uses: actions/upload-artifact@v2
        with:
          name: anagram_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/anagram/3c_performance_stats/
          retention-days: 5

      - name: Build converted anagram (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/anagram
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert bc
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/bc
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-disable-rds \
            --project_path .

      - name: Copy 3c stats of bc
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/bc
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of bc
        uses: actions/upload-artifact@v2
        with:
          name: bc_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/bc/3c_performance_stats/
          retention-days: 5

      - name: Build converted bc (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/bc
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert ft
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/ft
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-disable-rds \
            --project_path .

      - name: Copy 3c stats of ft
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/ft
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ft
        uses: actions/upload-artifact@v2
        with:
          name: ft_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/ft/3c_performance_stats/
          retention-days: 5

      - name: Build converted ft (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/ft
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert ks
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/ks
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-disable-rds \
            --project_path .

      - name: Copy 3c stats of ks
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/ks
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ks
        uses: actions/upload-artifact@v2
        with:
          name: ks_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/ks/3c_performance_stats/
          retention-days: 5

      - name: Build converted ks (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/ks
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/yacr2
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-disable-rds \
            --project_path .

      - name: Copy 3c stats of yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/yacr2
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of yacr2
        uses: actions/upload-artifact@v2
        with:
          name: yacr2_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/yacr2/3c_performance_stats/
          retention-days: 5

      - name: Build converted yacr2 (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/ptrdist-1.1/yacr2
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

  test_ptrdist_expand_macros_alltypes:
    name: Test PtrDist (macro-expanded, -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build PtrDist
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/ptrdist-1.1.tar.gz
          cd ptrdist-1.1
          ( cd yacr2 ; \
            for header in *.h  ; do
              src="$(basename "$header" .h).c"
              new_header="$(basename "$header" .h)_code.h"
              test -e "$src" || continue
              cp "$header" "$new_header"
              sed -i "s/#include \"$header\"/#include \"$new_header\"/" "$src"
            done )
          for i in anagram bc ft ks yacr2 ; do \
            (cd $i ; bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" LOCAL_CFLAGS="-D_ISOC99_SOURCE") \
          done

      - name: Convert anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/anagram
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --project_path .

      - name: Copy 3c stats of anagram
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/anagram
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of anagram
        uses: actions/upload-artifact@v2
        with:
          name: anagram_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/anagram/3c_performance_stats/
          retention-days: 5

      - name: Build converted anagram (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/anagram
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert bc
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/bc
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --project_path .

      - name: Copy 3c stats of bc
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/bc
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of bc
        uses: actions/upload-artifact@v2
        with:
          name: bc_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/bc/3c_performance_stats/
          retention-days: 5

      - name: Build converted bc (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/bc
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert ft
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/ft
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --project_path .

      - name: Copy 3c stats of ft
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/ft
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ft
        uses: actions/upload-artifact@v2
        with:
          name: ft_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/ft/3c_performance_stats/
          retention-days: 5

      - name: Build converted ft (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/ft
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert ks
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/ks
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --project_path .

      - name: Copy 3c stats of ks
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/ks
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ks
        uses: actions/upload-artifact@v2
        with:
          name: ks_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/ks/3c_performance_stats/
          retention-days: 5

      - name: Build converted ks (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/ks
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

      - name: Convert yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/yacr2
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --project_path .

      - name: Copy 3c stats of yacr2
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/yacr2
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of yacr2
        uses: actions/upload-artifact@v2
        with:
          name: yacr2_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/yacr2/3c_performance_stats/
          retention-days: 5

      - name: Build converted yacr2 (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/ptrdist-1.1/yacr2
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k LOCAL_CFLAGS="-D_ISOC99_SOURCE" || true

  test_libarchive_no_expand_macros_no_alltypes:
    name: Test LibArchive (not macro-expanded, no -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibArchive
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/libarchive-3.4.3.tar.gz
          cd libarchive-3.4.3
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w -D_GNU_SOURCE" ..
          bear ninja -l $(nproc) archive

      - name: Convert LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/libarchive-3.4.3
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/(test|test_utils|tar|cat|cpio|examples|contrib|libarchive_fe)/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/libarchive-3.4.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibArchive
        uses: actions/upload-artifact@v2
        with:
          name: LibArchive_no_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/libarchive-3.4.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/libarchive-3.4.3
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 archive

  test_libarchive_no_expand_macros_alltypes_only_g_sol:
    name: Test LibArchive (not macro-expanded, -alltypes, greatest solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibArchive
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/libarchive-3.4.3.tar.gz
          cd libarchive-3.4.3
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w -D_GNU_SOURCE" ..
          bear ninja -l $(nproc) archive

      - name: Convert LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/libarchive-3.4.3
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/(test|test_utils|tar|cat|cpio|examples|contrib|libarchive_fe)/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-g-sol \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/libarchive-3.4.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibArchive
        uses: actions/upload-artifact@v2
        with:
          name: LibArchive_no_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/libarchive-3.4.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibArchive (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/libarchive-3.4.3
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 archive || true

  test_libarchive_no_expand_macros_alltypes_only_l_sol:
    name: Test LibArchive (not macro-expanded, -alltypes, least solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibArchive
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/libarchive-3.4.3.tar.gz
          cd libarchive-3.4.3
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w -D_GNU_SOURCE" ..
          bear ninja -l $(nproc) archive

      - name: Convert LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/libarchive-3.4.3
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/(test|test_utils|tar|cat|cpio|examples|contrib|libarchive_fe)/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-l-sol \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/libarchive-3.4.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibArchive
        uses: actions/upload-artifact@v2
        with:
          name: LibArchive_no_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/libarchive-3.4.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibArchive (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/libarchive-3.4.3
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 archive || true

  test_libarchive_no_expand_macros_alltypes_disable_rds:
    name: Test LibArchive (not macro-expanded, -alltypes, CCured solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibArchive
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds
          tar -xvzf ${{env.benchmark_tar_dir}}/libarchive-3.4.3.tar.gz
          cd libarchive-3.4.3
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w -D_GNU_SOURCE" ..
          bear ninja -l $(nproc) archive

      - name: Convert LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/libarchive-3.4.3
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/(test|test_utils|tar|cat|cpio|examples|contrib|libarchive_fe)/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-disable-rds \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/libarchive-3.4.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibArchive
        uses: actions/upload-artifact@v2
        with:
          name: LibArchive_no_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/libarchive-3.4.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibArchive (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/libarchive-3.4.3
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 archive || true

  test_libarchive_no_expand_macros_alltypes:
    name: Test LibArchive (not macro-expanded, -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibArchive
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/libarchive-3.4.3.tar.gz
          cd libarchive-3.4.3
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w -D_GNU_SOURCE" ..
          bear ninja -l $(nproc) archive

      - name: Convert LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/libarchive-3.4.3
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/(test|test_utils|tar|cat|cpio|examples|contrib|libarchive_fe)/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/libarchive-3.4.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibArchive
        uses: actions/upload-artifact@v2
        with:
          name: LibArchive_no_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/libarchive-3.4.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibArchive (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/libarchive-3.4.3
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 archive || true

  test_libarchive_expand_macros_no_alltypes:
    name: Test LibArchive (macro-expanded, no -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibArchive
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/libarchive-3.4.3.tar.gz
          cd libarchive-3.4.3
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w -D_GNU_SOURCE" ..
          bear ninja -l $(nproc) archive

      - name: Convert LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/libarchive-3.4.3
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/(test|test_utils|tar|cat|cpio|examples|contrib|libarchive_fe)/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --expand_macros_before_conversion \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/libarchive-3.4.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibArchive
        uses: actions/upload-artifact@v2
        with:
          name: LibArchive_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/libarchive-3.4.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/libarchive-3.4.3
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 archive

  test_libarchive_expand_macros_alltypes_only_g_sol:
    name: Test LibArchive (macro-expanded, -alltypes, greatest solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibArchive
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/libarchive-3.4.3.tar.gz
          cd libarchive-3.4.3
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w -D_GNU_SOURCE" ..
          bear ninja -l $(nproc) archive

      - name: Convert LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/libarchive-3.4.3
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/(test|test_utils|tar|cat|cpio|examples|contrib|libarchive_fe)/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-g-sol \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/libarchive-3.4.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibArchive
        uses: actions/upload-artifact@v2
        with:
          name: LibArchive_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/libarchive-3.4.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibArchive (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/libarchive-3.4.3
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 archive || true

  test_libarchive_expand_macros_alltypes_only_l_sol:
    name: Test LibArchive (macro-expanded, -alltypes, least solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibArchive
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/libarchive-3.4.3.tar.gz
          cd libarchive-3.4.3
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w -D_GNU_SOURCE" ..
          bear ninja -l $(nproc) archive

      - name: Convert LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/libarchive-3.4.3
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/(test|test_utils|tar|cat|cpio|examples|contrib|libarchive_fe)/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-l-sol \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/libarchive-3.4.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibArchive
        uses: actions/upload-artifact@v2
        with:
          name: LibArchive_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/libarchive-3.4.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibArchive (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/libarchive-3.4.3
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 archive || true

  test_libarchive_expand_macros_alltypes_disable_rds:
    name: Test LibArchive (macro-expanded, -alltypes, CCured solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibArchive
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds
          tar -xvzf ${{env.benchmark_tar_dir}}/libarchive-3.4.3.tar.gz
          cd libarchive-3.4.3
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w -D_GNU_SOURCE" ..
          bear ninja -l $(nproc) archive

      - name: Convert LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/libarchive-3.4.3
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/(test|test_utils|tar|cat|cpio|examples|contrib|libarchive_fe)/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-disable-rds \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/libarchive-3.4.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibArchive
        uses: actions/upload-artifact@v2
        with:
          name: LibArchive_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/libarchive-3.4.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibArchive (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/libarchive-3.4.3
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 archive || true

  test_libarchive_expand_macros_alltypes:
    name: Test LibArchive (macro-expanded, -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibArchive
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/libarchive-3.4.3.tar.gz
          cd libarchive-3.4.3
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w -D_GNU_SOURCE" ..
          bear ninja -l $(nproc) archive

      - name: Convert LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/libarchive-3.4.3
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/(test|test_utils|tar|cat|cpio|examples|contrib|libarchive_fe)/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/libarchive-3.4.3
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibArchive
        uses: actions/upload-artifact@v2
        with:
          name: LibArchive_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes/libarchive-3.4.3/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibArchive (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/libarchive-3.4.3
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 archive || true

  test_lua_no_expand_macros_no_alltypes:
    name: Test Lua (not macro-expanded, no -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Lua
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/lua-5.4.1.tar.gz
          cd lua-5.4.1
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" linux
          ( cd src ; \
            clang-rename-10 -pl -i \
              --qualified-name=main \
              --new-name=luac_main \
              luac.c )

      - name: Convert Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/lua-5.4.1
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --project_path .

      - name: Copy 3c stats of Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/lua-5.4.1
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Lua
        uses: actions/upload-artifact@v2
        with:
          name: Lua_no_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/lua-5.4.1/3c_performance_stats/
          retention-days: 5

      - name: Build converted Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/lua-5.4.1
          cp -r out.checked/* .
          rm -r out.checked
          sed -i "s/luac_main/main/" src/luac.c
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k linux

  test_lua_no_expand_macros_alltypes_only_g_sol:
    name: Test Lua (not macro-expanded, -alltypes, greatest solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Lua
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/lua-5.4.1.tar.gz
          cd lua-5.4.1
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" linux
          ( cd src ; \
            clang-rename-10 -pl -i \
              --qualified-name=main \
              --new-name=luac_main \
              luac.c )

      - name: Convert Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/lua-5.4.1
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-g-sol \
            --project_path .

      - name: Copy 3c stats of Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/lua-5.4.1
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Lua
        uses: actions/upload-artifact@v2
        with:
          name: Lua_no_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/lua-5.4.1/3c_performance_stats/
          retention-days: 5

      - name: Build converted Lua (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/lua-5.4.1
          cp -r out.checked/* .
          rm -r out.checked
          sed -i "s/luac_main/main/" src/luac.c
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k linux || true

  test_lua_no_expand_macros_alltypes_only_l_sol:
    name: Test Lua (not macro-expanded, -alltypes, least solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Lua
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/lua-5.4.1.tar.gz
          cd lua-5.4.1
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" linux
          ( cd src ; \
            clang-rename-10 -pl -i \
              --qualified-name=main \
              --new-name=luac_main \
              luac.c )

      - name: Convert Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/lua-5.4.1
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-l-sol \
            --project_path .

      - name: Copy 3c stats of Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/lua-5.4.1
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Lua
        uses: actions/upload-artifact@v2
        with:
          name: Lua_no_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/lua-5.4.1/3c_performance_stats/
          retention-days: 5

      - name: Build converted Lua (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/lua-5.4.1
          cp -r out.checked/* .
          rm -r out.checked
          sed -i "s/luac_main/main/" src/luac.c
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k linux || true

  test_lua_no_expand_macros_alltypes_disable_rds:
    name: Test Lua (not macro-expanded, -alltypes, CCured solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Lua
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds
          tar -xvzf ${{env.benchmark_tar_dir}}/lua-5.4.1.tar.gz
          cd lua-5.4.1
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" linux
          ( cd src ; \
            clang-rename-10 -pl -i \
              --qualified-name=main \
              --new-name=luac_main \
              luac.c )

      - name: Convert Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/lua-5.4.1
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-disable-rds \
            --project_path .

      - name: Copy 3c stats of Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/lua-5.4.1
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Lua
        uses: actions/upload-artifact@v2
        with:
          name: Lua_no_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/lua-5.4.1/3c_performance_stats/
          retention-days: 5

      - name: Build converted Lua (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/lua-5.4.1
          cp -r out.checked/* .
          rm -r out.checked
          sed -i "s/luac_main/main/" src/luac.c
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k linux || true

  test_lua_no_expand_macros_alltypes:
    name: Test Lua (not macro-expanded, -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Lua
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/lua-5.4.1.tar.gz
          cd lua-5.4.1
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" linux
          ( cd src ; \
            clang-rename-10 -pl -i \
              --qualified-name=main \
              --new-name=luac_main \
              luac.c )

      - name: Convert Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/lua-5.4.1
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --project_path .

      - name: Copy 3c stats of Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/lua-5.4.1
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Lua
        uses: actions/upload-artifact@v2
        with:
          name: Lua_no_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/lua-5.4.1/3c_performance_stats/
          retention-days: 5

      - name: Build converted Lua (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/lua-5.4.1
          cp -r out.checked/* .
          rm -r out.checked
          sed -i "s/luac_main/main/" src/luac.c
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k linux || true

  test_lua_expand_macros_no_alltypes:
    name: Test Lua (macro-expanded, no -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Lua
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/lua-5.4.1.tar.gz
          cd lua-5.4.1
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" linux
          ( cd src ; \
            clang-rename-10 -pl -i \
              --qualified-name=main \
              --new-name=luac_main \
              luac.c )

      - name: Convert Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/lua-5.4.1
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --expand_macros_before_conversion \
            --project_path .

      - name: Copy 3c stats of Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/lua-5.4.1
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Lua
        uses: actions/upload-artifact@v2
        with:
          name: Lua_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/lua-5.4.1/3c_performance_stats/
          retention-days: 5

      - name: Build converted Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/lua-5.4.1
          cp -r out.checked/* .
          rm -r out.checked
          sed -i "s/luac_main/main/" src/luac.c
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k linux

  test_lua_expand_macros_alltypes_only_g_sol:
    name: Test Lua (macro-expanded, -alltypes, greatest solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Lua
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/lua-5.4.1.tar.gz
          cd lua-5.4.1
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" linux
          ( cd src ; \
            clang-rename-10 -pl -i \
              --qualified-name=main \
              --new-name=luac_main \
              luac.c )

      - name: Convert Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/lua-5.4.1
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-g-sol \
            --project_path .

      - name: Copy 3c stats of Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/lua-5.4.1
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Lua
        uses: actions/upload-artifact@v2
        with:
          name: Lua_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/lua-5.4.1/3c_performance_stats/
          retention-days: 5

      - name: Build converted Lua (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/lua-5.4.1
          cp -r out.checked/* .
          rm -r out.checked
          sed -i "s/luac_main/main/" src/luac.c
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k linux || true

  test_lua_expand_macros_alltypes_only_l_sol:
    name: Test Lua (macro-expanded, -alltypes, least solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Lua
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/lua-5.4.1.tar.gz
          cd lua-5.4.1
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" linux
          ( cd src ; \
            clang-rename-10 -pl -i \
              --qualified-name=main \
              --new-name=luac_main \
              luac.c )

      - name: Convert Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/lua-5.4.1
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-l-sol \
            --project_path .

      - name: Copy 3c stats of Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/lua-5.4.1
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Lua
        uses: actions/upload-artifact@v2
        with:
          name: Lua_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/lua-5.4.1/3c_performance_stats/
          retention-days: 5

      - name: Build converted Lua (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/lua-5.4.1
          cp -r out.checked/* .
          rm -r out.checked
          sed -i "s/luac_main/main/" src/luac.c
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k linux || true

  test_lua_expand_macros_alltypes_disable_rds:
    name: Test Lua (macro-expanded, -alltypes, CCured solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Lua
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds
          tar -xvzf ${{env.benchmark_tar_dir}}/lua-5.4.1.tar.gz
          cd lua-5.4.1
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" linux
          ( cd src ; \
            clang-rename-10 -pl -i \
              --qualified-name=main \
              --new-name=luac_main \
              luac.c )

      - name: Convert Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/lua-5.4.1
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-disable-rds \
            --project_path .

      - name: Copy 3c stats of Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/lua-5.4.1
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Lua
        uses: actions/upload-artifact@v2
        with:
          name: Lua_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/lua-5.4.1/3c_performance_stats/
          retention-days: 5

      - name: Build converted Lua (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/lua-5.4.1
          cp -r out.checked/* .
          rm -r out.checked
          sed -i "s/luac_main/main/" src/luac.c
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k linux || true

  test_lua_expand_macros_alltypes:
    name: Test Lua (macro-expanded, -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Lua
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/lua-5.4.1.tar.gz
          cd lua-5.4.1
          bear make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" linux
          ( cd src ; \
            clang-rename-10 -pl -i \
              --qualified-name=main \
              --new-name=luac_main \
              luac.c )

      - name: Convert Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/lua-5.4.1
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --project_path .

      - name: Copy 3c stats of Lua
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/lua-5.4.1
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Lua
        uses: actions/upload-artifact@v2
        with:
          name: Lua_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes/lua-5.4.1/3c_performance_stats/
          retention-days: 5

      - name: Build converted Lua (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/lua-5.4.1
          cp -r out.checked/* .
          rm -r out.checked
          sed -i "s/luac_main/main/" src/luac.c
          make -j $(nproc) -l $(nproc) --output-sync CC="${{env.builddir}}/bin/clang" -k linux || true

  test_libtiff_no_expand_macros_no_alltypes:
    name: Test LibTiff (not macro-expanded, no -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibTiff
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/tiff-4.1.0.tar.gz
          cd tiff-4.1.0
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" .
          bear ninja -l $(nproc) tiff
          ( cd tools ; \
            for i in *.c ; do \
              clang-rename-10 -pl -i \
                --qualified-name=main \
                --new-name=$(basename -s .c $i)_main $i ; \
            done)

      - name: Convert LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/tiff-4.1.0
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/tif_stream.cxx' \
            --skip '.*/test/.*\.c' \
            --skip '.*/contrib/.*\.c' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --project_path .

      - name: Copy 3c stats of LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/tiff-4.1.0
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibTiff
        uses: actions/upload-artifact@v2
        with:
          name: LibTiff_no_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/tiff-4.1.0/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/tiff-4.1.0
          cp -r out.checked/* .
          rm -r out.checked
          ninja -l $(nproc) -k 0 tiff

  test_libtiff_no_expand_macros_alltypes_only_g_sol:
    name: Test LibTiff (not macro-expanded, -alltypes, greatest solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibTiff
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/tiff-4.1.0.tar.gz
          cd tiff-4.1.0
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" .
          bear ninja -l $(nproc) tiff
          ( cd tools ; \
            for i in *.c ; do \
              clang-rename-10 -pl -i \
                --qualified-name=main \
                --new-name=$(basename -s .c $i)_main $i ; \
            done)

      - name: Convert LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/tiff-4.1.0
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/tif_stream.cxx' \
            --skip '.*/test/.*\.c' \
            --skip '.*/contrib/.*\.c' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-g-sol \
            --project_path .

      - name: Copy 3c stats of LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/tiff-4.1.0
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibTiff
        uses: actions/upload-artifact@v2
        with:
          name: LibTiff_no_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/tiff-4.1.0/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibTiff (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/tiff-4.1.0
          cp -r out.checked/* .
          rm -r out.checked
          ninja -l $(nproc) -k 0 tiff || true

  test_libtiff_no_expand_macros_alltypes_only_l_sol:
    name: Test LibTiff (not macro-expanded, -alltypes, least solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibTiff
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/tiff-4.1.0.tar.gz
          cd tiff-4.1.0
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" .
          bear ninja -l $(nproc) tiff
          ( cd tools ; \
            for i in *.c ; do \
              clang-rename-10 -pl -i \
                --qualified-name=main \
                --new-name=$(basename -s .c $i)_main $i ; \
            done)

      - name: Convert LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/tiff-4.1.0
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/tif_stream.cxx' \
            --skip '.*/test/.*\.c' \
            --skip '.*/contrib/.*\.c' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-l-sol \
            --project_path .

      - name: Copy 3c stats of LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/tiff-4.1.0
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibTiff
        uses: actions/upload-artifact@v2
        with:
          name: LibTiff_no_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/tiff-4.1.0/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibTiff (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/tiff-4.1.0
          cp -r out.checked/* .
          rm -r out.checked
          ninja -l $(nproc) -k 0 tiff || true

  test_libtiff_no_expand_macros_alltypes_disable_rds:
    name: Test LibTiff (not macro-expanded, -alltypes, CCured solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibTiff
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds
          tar -xvzf ${{env.benchmark_tar_dir}}/tiff-4.1.0.tar.gz
          cd tiff-4.1.0
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" .
          bear ninja -l $(nproc) tiff
          ( cd tools ; \
            for i in *.c ; do \
              clang-rename-10 -pl -i \
                --qualified-name=main \
                --new-name=$(basename -s .c $i)_main $i ; \
            done)

      - name: Convert LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/tiff-4.1.0
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/tif_stream.cxx' \
            --skip '.*/test/.*\.c' \
            --skip '.*/contrib/.*\.c' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-disable-rds \
            --project_path .

      - name: Copy 3c stats of LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/tiff-4.1.0
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibTiff
        uses: actions/upload-artifact@v2
        with:
          name: LibTiff_no_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/tiff-4.1.0/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibTiff (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/tiff-4.1.0
          cp -r out.checked/* .
          rm -r out.checked
          ninja -l $(nproc) -k 0 tiff || true

  test_libtiff_no_expand_macros_alltypes:
    name: Test LibTiff (not macro-expanded, -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibTiff
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/tiff-4.1.0.tar.gz
          cd tiff-4.1.0
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" .
          bear ninja -l $(nproc) tiff
          ( cd tools ; \
            for i in *.c ; do \
              clang-rename-10 -pl -i \
                --qualified-name=main \
                --new-name=$(basename -s .c $i)_main $i ; \
            done)

      - name: Convert LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/tiff-4.1.0
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/tif_stream.cxx' \
            --skip '.*/test/.*\.c' \
            --skip '.*/contrib/.*\.c' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --project_path .

      - name: Copy 3c stats of LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/tiff-4.1.0
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibTiff
        uses: actions/upload-artifact@v2
        with:
          name: LibTiff_no_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/tiff-4.1.0/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibTiff (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/tiff-4.1.0
          cp -r out.checked/* .
          rm -r out.checked
          ninja -l $(nproc) -k 0 tiff || true

  test_libtiff_expand_macros_no_alltypes:
    name: Test LibTiff (macro-expanded, no -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibTiff
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/tiff-4.1.0.tar.gz
          cd tiff-4.1.0
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" .
          bear ninja -l $(nproc) tiff
          ( cd tools ; \
            for i in *.c ; do \
              clang-rename-10 -pl -i \
                --qualified-name=main \
                --new-name=$(basename -s .c $i)_main $i ; \
            done)

      - name: Convert LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/tiff-4.1.0
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/tif_stream.cxx' \
            --skip '.*/test/.*\.c' \
            --skip '.*/contrib/.*\.c' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --expand_macros_before_conversion \
            --project_path .

      - name: Copy 3c stats of LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/tiff-4.1.0
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibTiff
        uses: actions/upload-artifact@v2
        with:
          name: LibTiff_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/tiff-4.1.0/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/tiff-4.1.0
          cp -r out.checked/* .
          rm -r out.checked
          ninja -l $(nproc) -k 0 tiff

  test_libtiff_expand_macros_alltypes_only_g_sol:
    name: Test LibTiff (macro-expanded, -alltypes, greatest solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibTiff
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/tiff-4.1.0.tar.gz
          cd tiff-4.1.0
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" .
          bear ninja -l $(nproc) tiff
          ( cd tools ; \
            for i in *.c ; do \
              clang-rename-10 -pl -i \
                --qualified-name=main \
                --new-name=$(basename -s .c $i)_main $i ; \
            done)

      - name: Convert LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/tiff-4.1.0
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/tif_stream.cxx' \
            --skip '.*/test/.*\.c' \
            --skip '.*/contrib/.*\.c' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-g-sol \
            --project_path .

      - name: Copy 3c stats of LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/tiff-4.1.0
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibTiff
        uses: actions/upload-artifact@v2
        with:
          name: LibTiff_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/tiff-4.1.0/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibTiff (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/tiff-4.1.0
          cp -r out.checked/* .
          rm -r out.checked
          ninja -l $(nproc) -k 0 tiff || true

  test_libtiff_expand_macros_alltypes_only_l_sol:
    name: Test LibTiff (macro-expanded, -alltypes, least solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibTiff
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/tiff-4.1.0.tar.gz
          cd tiff-4.1.0
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" .
          bear ninja -l $(nproc) tiff
          ( cd tools ; \
            for i in *.c ; do \
              clang-rename-10 -pl -i \
                --qualified-name=main \
                --new-name=$(basename -s .c $i)_main $i ; \
            done)

      - name: Convert LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/tiff-4.1.0
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/tif_stream.cxx' \
            --skip '.*/test/.*\.c' \
            --skip '.*/contrib/.*\.c' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-l-sol \
            --project_path .

      - name: Copy 3c stats of LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/tiff-4.1.0
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibTiff
        uses: actions/upload-artifact@v2
        with:
          name: LibTiff_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/tiff-4.1.0/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibTiff (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/tiff-4.1.0
          cp -r out.checked/* .
          rm -r out.checked
          ninja -l $(nproc) -k 0 tiff || true

  test_libtiff_expand_macros_alltypes_disable_rds:
    name: Test LibTiff (macro-expanded, -alltypes, CCured solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibTiff
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds
          tar -xvzf ${{env.benchmark_tar_dir}}/tiff-4.1.0.tar.gz
          cd tiff-4.1.0
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" .
          bear ninja -l $(nproc) tiff
          ( cd tools ; \
            for i in *.c ; do \
              clang-rename-10 -pl -i \
                --qualified-name=main \
                --new-name=$(basename -s .c $i)_main $i ; \
            done)

      - name: Convert LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/tiff-4.1.0
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/tif_stream.cxx' \
            --skip '.*/test/.*\.c' \
            --skip '.*/contrib/.*\.c' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-disable-rds \
            --project_path .

      - name: Copy 3c stats of LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/tiff-4.1.0
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibTiff
        uses: actions/upload-artifact@v2
        with:
          name: LibTiff_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/tiff-4.1.0/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibTiff (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/tiff-4.1.0
          cp -r out.checked/* .
          rm -r out.checked
          ninja -l $(nproc) -k 0 tiff || true

  test_libtiff_expand_macros_alltypes:
    name: Test LibTiff (macro-expanded, -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibTiff
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/tiff-4.1.0.tar.gz
          cd tiff-4.1.0
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" .
          bear ninja -l $(nproc) tiff
          ( cd tools ; \
            for i in *.c ; do \
              clang-rename-10 -pl -i \
                --qualified-name=main \
                --new-name=$(basename -s .c $i)_main $i ; \
            done)

      - name: Convert LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/tiff-4.1.0
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/tif_stream.cxx' \
            --skip '.*/test/.*\.c' \
            --skip '.*/contrib/.*\.c' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --project_path .

      - name: Copy 3c stats of LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/tiff-4.1.0
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of LibTiff
        uses: actions/upload-artifact@v2
        with:
          name: LibTiff_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes/tiff-4.1.0/3c_performance_stats/
          retention-days: 5

      - name: Build converted LibTiff (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/tiff-4.1.0
          cp -r out.checked/* .
          rm -r out.checked
          ninja -l $(nproc) -k 0 tiff || true

  test_zlib_no_expand_macros_no_alltypes:
    name: Test ZLib (not macro-expanded, no -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build ZLib
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/zlib-1.2.11.tar.gz
          cd zlib-1.2.11
          mkdir build
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" ..
          bear ninja -l $(nproc) zlib

      - name: Convert ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/zlib-1.2.11
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/test/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/zlib-1.2.11
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ZLib
        uses: actions/upload-artifact@v2
        with:
          name: ZLib_no_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/zlib-1.2.11/3c_performance_stats/
          retention-days: 5

      - name: Build converted ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/zlib-1.2.11
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 zlib

  test_zlib_no_expand_macros_alltypes_only_g_sol:
    name: Test ZLib (not macro-expanded, -alltypes, greatest solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build ZLib
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/zlib-1.2.11.tar.gz
          cd zlib-1.2.11
          mkdir build
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" ..
          bear ninja -l $(nproc) zlib

      - name: Convert ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/zlib-1.2.11
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/test/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-g-sol \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/zlib-1.2.11
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ZLib
        uses: actions/upload-artifact@v2
        with:
          name: ZLib_no_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/zlib-1.2.11/3c_performance_stats/
          retention-days: 5

      - name: Build converted ZLib (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/zlib-1.2.11
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 zlib || true

  test_zlib_no_expand_macros_alltypes_only_l_sol:
    name: Test ZLib (not macro-expanded, -alltypes, least solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build ZLib
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/zlib-1.2.11.tar.gz
          cd zlib-1.2.11
          mkdir build
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" ..
          bear ninja -l $(nproc) zlib

      - name: Convert ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/zlib-1.2.11
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/test/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-l-sol \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/zlib-1.2.11
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ZLib
        uses: actions/upload-artifact@v2
        with:
          name: ZLib_no_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/zlib-1.2.11/3c_performance_stats/
          retention-days: 5

      - name: Build converted ZLib (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/zlib-1.2.11
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 zlib || true

  test_zlib_no_expand_macros_alltypes_disable_rds:
    name: Test ZLib (not macro-expanded, -alltypes, CCured solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build ZLib
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds
          tar -xvzf ${{env.benchmark_tar_dir}}/zlib-1.2.11.tar.gz
          cd zlib-1.2.11
          mkdir build
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" ..
          bear ninja -l $(nproc) zlib

      - name: Convert ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/zlib-1.2.11
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/test/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-disable-rds \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/zlib-1.2.11
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ZLib
        uses: actions/upload-artifact@v2
        with:
          name: ZLib_no_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/zlib-1.2.11/3c_performance_stats/
          retention-days: 5

      - name: Build converted ZLib (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/zlib-1.2.11
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 zlib || true

  test_zlib_no_expand_macros_alltypes:
    name: Test ZLib (not macro-expanded, -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build ZLib
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/zlib-1.2.11.tar.gz
          cd zlib-1.2.11
          mkdir build
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" ..
          bear ninja -l $(nproc) zlib

      - name: Convert ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/zlib-1.2.11
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/test/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/zlib-1.2.11
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ZLib
        uses: actions/upload-artifact@v2
        with:
          name: ZLib_no_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/zlib-1.2.11/3c_performance_stats/
          retention-days: 5

      - name: Build converted ZLib (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/zlib-1.2.11
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 zlib || true

  test_zlib_expand_macros_no_alltypes:
    name: Test ZLib (macro-expanded, no -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build ZLib
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/zlib-1.2.11.tar.gz
          cd zlib-1.2.11
          mkdir build
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" ..
          bear ninja -l $(nproc) zlib

      - name: Convert ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/zlib-1.2.11
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/test/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --expand_macros_before_conversion \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/zlib-1.2.11
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ZLib
        uses: actions/upload-artifact@v2
        with:
          name: ZLib_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/zlib-1.2.11/3c_performance_stats/
          retention-days: 5

      - name: Build converted ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/zlib-1.2.11
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 zlib

  test_zlib_expand_macros_alltypes_only_g_sol:
    name: Test ZLib (macro-expanded, -alltypes, greatest solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build ZLib
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/zlib-1.2.11.tar.gz
          cd zlib-1.2.11
          mkdir build
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" ..
          bear ninja -l $(nproc) zlib

      - name: Convert ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/zlib-1.2.11
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/test/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-g-sol \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/zlib-1.2.11
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ZLib
        uses: actions/upload-artifact@v2
        with:
          name: ZLib_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/zlib-1.2.11/3c_performance_stats/
          retention-days: 5

      - name: Build converted ZLib (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/zlib-1.2.11
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 zlib || true

  test_zlib_expand_macros_alltypes_only_l_sol:
    name: Test ZLib (macro-expanded, -alltypes, least solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build ZLib
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/zlib-1.2.11.tar.gz
          cd zlib-1.2.11
          mkdir build
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" ..
          bear ninja -l $(nproc) zlib

      - name: Convert ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/zlib-1.2.11
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/test/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-l-sol \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/zlib-1.2.11
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ZLib
        uses: actions/upload-artifact@v2
        with:
          name: ZLib_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/zlib-1.2.11/3c_performance_stats/
          retention-days: 5

      - name: Build converted ZLib (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/zlib-1.2.11
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 zlib || true

  test_zlib_expand_macros_alltypes_disable_rds:
    name: Test ZLib (macro-expanded, -alltypes, CCured solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build ZLib
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds
          tar -xvzf ${{env.benchmark_tar_dir}}/zlib-1.2.11.tar.gz
          cd zlib-1.2.11
          mkdir build
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" ..
          bear ninja -l $(nproc) zlib

      - name: Convert ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/zlib-1.2.11
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/test/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-disable-rds \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/zlib-1.2.11
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ZLib
        uses: actions/upload-artifact@v2
        with:
          name: ZLib_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/zlib-1.2.11/3c_performance_stats/
          retention-days: 5

      - name: Build converted ZLib (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/zlib-1.2.11
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 zlib || true

  test_zlib_expand_macros_alltypes:
    name: Test ZLib (macro-expanded, -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build ZLib
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/zlib-1.2.11.tar.gz
          cd zlib-1.2.11
          mkdir build
          cd build
          cmake -DCMAKE_C_COMPILER=${{env.builddir}}/bin/clang -G Ninja -DCMAKE_C_FLAGS="-w" ..
          bear ninja -l $(nproc) zlib

      - name: Convert ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/zlib-1.2.11
          ${{env.port_tools}}/convert_project.py \
            --skip '/.*/test/.*' \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --project_path . \
            --build_dir build

      - name: Copy 3c stats of ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/zlib-1.2.11
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of ZLib
        uses: actions/upload-artifact@v2
        with:
          name: ZLib_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes/zlib-1.2.11/3c_performance_stats/
          retention-days: 5

      - name: Build converted ZLib (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/zlib-1.2.11
          cp -r out.checked/* .
          rm -r out.checked
          cd build
          ninja -l $(nproc) -k 0 zlib || true

  test_icecast_no_expand_macros_no_alltypes:
    name: Test Icecast (not macro-expanded, no -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Icecast
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/icecast-2.4.4.tar.gz
          cd icecast-2.4.4
          CC="${{env.builddir}}/bin/clang" ./configure
          bear make -j $(nproc) -l $(nproc) --output-sync

      - name: Convert Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/icecast-2.4.4
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --project_path .

      - name: Copy 3c stats of Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/icecast-2.4.4
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Icecast
        uses: actions/upload-artifact@v2
        with:
          name: Icecast_no_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/icecast-2.4.4/3c_performance_stats/
          retention-days: 5

      - name: Build converted Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_no_alltypes/icecast-2.4.4
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync -k

  test_icecast_no_expand_macros_alltypes_only_g_sol:
    name: Test Icecast (not macro-expanded, -alltypes, greatest solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Icecast
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/icecast-2.4.4.tar.gz
          cd icecast-2.4.4
          CC="${{env.builddir}}/bin/clang" ./configure
          bear make -j $(nproc) -l $(nproc) --output-sync

      - name: Convert Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/icecast-2.4.4
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-g-sol \
            --project_path .

      - name: Copy 3c stats of Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/icecast-2.4.4
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Icecast
        uses: actions/upload-artifact@v2
        with:
          name: Icecast_no_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/icecast-2.4.4/3c_performance_stats/
          retention-days: 5

      - name: Build converted Icecast (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_g_sol/icecast-2.4.4
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync -k || true

  test_icecast_no_expand_macros_alltypes_only_l_sol:
    name: Test Icecast (not macro-expanded, -alltypes, least solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Icecast
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/icecast-2.4.4.tar.gz
          cd icecast-2.4.4
          CC="${{env.builddir}}/bin/clang" ./configure
          bear make -j $(nproc) -l $(nproc) --output-sync

      - name: Convert Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/icecast-2.4.4
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-only-l-sol \
            --project_path .

      - name: Copy 3c stats of Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/icecast-2.4.4
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Icecast
        uses: actions/upload-artifact@v2
        with:
          name: Icecast_no_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/icecast-2.4.4/3c_performance_stats/
          retention-days: 5

      - name: Build converted Icecast (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_only_l_sol/icecast-2.4.4
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync -k || true

  test_icecast_no_expand_macros_alltypes_disable_rds:
    name: Test Icecast (not macro-expanded, -alltypes, CCured solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Icecast
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds
          tar -xvzf ${{env.benchmark_tar_dir}}/icecast-2.4.4.tar.gz
          cd icecast-2.4.4
          CC="${{env.builddir}}/bin/clang" ./configure
          bear make -j $(nproc) -l $(nproc) --output-sync

      - name: Convert Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/icecast-2.4.4
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --extra-3c-arg=-disable-rds \
            --project_path .

      - name: Copy 3c stats of Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/icecast-2.4.4
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Icecast
        uses: actions/upload-artifact@v2
        with:
          name: Icecast_no_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/icecast-2.4.4/3c_performance_stats/
          retention-days: 5

      - name: Build converted Icecast (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes_disable_rds/icecast-2.4.4
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync -k || true

  test_icecast_no_expand_macros_alltypes:
    name: Test Icecast (not macro-expanded, -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Icecast
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/icecast-2.4.4.tar.gz
          cd icecast-2.4.4
          CC="${{env.builddir}}/bin/clang" ./configure
          bear make -j $(nproc) -l $(nproc) --output-sync

      - name: Convert Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/icecast-2.4.4
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --project_path .

      - name: Copy 3c stats of Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/icecast-2.4.4
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Icecast
        uses: actions/upload-artifact@v2
        with:
          name: Icecast_no_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/icecast-2.4.4/3c_performance_stats/
          retention-days: 5

      - name: Build converted Icecast (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/no_expand_macros_alltypes/icecast-2.4.4
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync -k || true

  test_icecast_expand_macros_no_alltypes:
    name: Test Icecast (macro-expanded, no -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Icecast
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/icecast-2.4.4.tar.gz
          cd icecast-2.4.4
          CC="${{env.builddir}}/bin/clang" ./configure
          bear make -j $(nproc) -l $(nproc) --output-sync

      - name: Convert Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/icecast-2.4.4
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --expand_macros_before_conversion \
            --project_path .

      - name: Copy 3c stats of Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/icecast-2.4.4
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Icecast
        uses: actions/upload-artifact@v2
        with:
          name: Icecast_expand_macros_no_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/icecast-2.4.4/3c_performance_stats/
          retention-days: 5

      - name: Build converted Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_no_alltypes/icecast-2.4.4
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync -k

  test_icecast_expand_macros_alltypes_only_g_sol:
    name: Test Icecast (macro-expanded, -alltypes, greatest solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Icecast
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/icecast-2.4.4.tar.gz
          cd icecast-2.4.4
          CC="${{env.builddir}}/bin/clang" ./configure
          bear make -j $(nproc) -l $(nproc) --output-sync

      - name: Convert Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/icecast-2.4.4
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-g-sol \
            --project_path .

      - name: Copy 3c stats of Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/icecast-2.4.4
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Icecast
        uses: actions/upload-artifact@v2
        with:
          name: Icecast_expand_macros_alltypes_only_g_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/icecast-2.4.4/3c_performance_stats/
          retention-days: 5

      - name: Build converted Icecast (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_g_sol/icecast-2.4.4
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync -k || true

  test_icecast_expand_macros_alltypes_only_l_sol:
    name: Test Icecast (macro-expanded, -alltypes, least solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Icecast
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol
          tar -xvzf ${{env.benchmark_tar_dir}}/icecast-2.4.4.tar.gz
          cd icecast-2.4.4
          CC="${{env.builddir}}/bin/clang" ./configure
          bear make -j $(nproc) -l $(nproc) --output-sync

      - name: Convert Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/icecast-2.4.4
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-only-l-sol \
            --project_path .

      - name: Copy 3c stats of Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/icecast-2.4.4
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Icecast
        uses: actions/upload-artifact@v2
        with:
          name: Icecast_expand_macros_alltypes_only_l_sol
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/icecast-2.4.4/3c_performance_stats/
          retention-days: 5

      - name: Build converted Icecast (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_only_l_sol/icecast-2.4.4
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync -k || true

  test_icecast_expand_macros_alltypes_disable_rds:
    name: Test Icecast (macro-expanded, -alltypes, CCured solution)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Icecast
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds
          tar -xvzf ${{env.benchmark_tar_dir}}/icecast-2.4.4.tar.gz
          cd icecast-2.4.4
          CC="${{env.builddir}}/bin/clang" ./configure
          bear make -j $(nproc) -l $(nproc) --output-sync

      - name: Convert Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/icecast-2.4.4
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --extra-3c-arg=-disable-rds \
            --project_path .

      - name: Copy 3c stats of Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/icecast-2.4.4
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Icecast
        uses: actions/upload-artifact@v2
        with:
          name: Icecast_expand_macros_alltypes_disable_rds
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/icecast-2.4.4/3c_performance_stats/
          retention-days: 5

      - name: Build converted Icecast (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes_disable_rds/icecast-2.4.4
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync -k || true

  test_icecast_expand_macros_alltypes:
    name: Test Icecast (macro-expanded, -alltypes)
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Icecast
        run: |
          mkdir -p ${{env.benchmark_conv_dir}}/expand_macros_alltypes
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes
          tar -xvzf ${{env.benchmark_tar_dir}}/icecast-2.4.4.tar.gz
          cd icecast-2.4.4
          CC="${{env.builddir}}/bin/clang" ./configure
          bear make -j $(nproc) -l $(nproc) --output-sync

      - name: Convert Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/icecast-2.4.4
          ${{env.port_tools}}/convert_project.py \
            --includeDir ${{env.include_dir}} \
            --prog_name ${{env.builddir}}/bin/3c \
            --extra-3c-arg=-alltypes \
            --expand_macros_before_conversion \
            --project_path .

      - name: Copy 3c stats of Icecast
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/icecast-2.4.4
          mkdir 3c_performance_stats/
          cp *.json 3c_performance_stats/

      - name: Upload 3c stats of Icecast
        uses: actions/upload-artifact@v2
        with:
          name: Icecast_expand_macros_alltypes
          path: ${{env.benchmark_conv_dir}}/expand_macros_alltypes/icecast-2.4.4/3c_performance_stats/
          retention-days: 5

      - name: Build converted Icecast (ignore failure)
        run: |
          cd ${{env.benchmark_conv_dir}}/expand_macros_alltypes/icecast-2.4.4
          cp -r out.checked/* .
          rm -r out.checked
          make -j $(nproc) -l $(nproc) --output-sync -k || true
