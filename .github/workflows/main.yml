name: Nightly Sanity Tests

on:
  # Run every day at 3:00 AM EDT (i.e., 7 am UTC)
  schedule:
    - cron: "0 7 * * *"
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch or commit ID of correctcomputation/checkedc-clang to run workflow on"
        required: true
        default: "main"

env:
  benchmark_tar_dir: "/home/github/checkedc-benchmarks"
  builddir: "${{github.workspace}}/b/ninja"
  benchmark_conv_dir: "${{github.workspace}}/benchmark_conv"
  branch_for_scheduled_run: "main"

jobs:

  # Cleanup files left behind by prior runs
  clean:
    name: Clean
    runs-on: self-hosted
    steps:
      - name: Clean
        run: |
          rm -rf ${{env.benchmark_conv_dir}}
          mkdir -p ${{env.benchmark_conv_dir}}
          rm -rf ${{env.builddir}}
          mkdir -p ${{env.builddir}}
          rm -rf ${{github.workspace}}/depsfolder
          mkdir -p ${{github.workspace}}/depsfolder

  # Clone and build 3C
  build_3c:
    name: Build 3C
    needs: clean
    runs-on: self-hosted
    steps:
      - name: Branch or commit ID
        run: echo "${{ github.event.inputs.branch || env.branch_for_scheduled_run }}"
      - name: Checkout our repository
        run: |
          git init ${{github.workspace}}/depsfolder/checkedc-clang
          cd ${{github.workspace}}/depsfolder/checkedc-clang
          git remote add origin https://github.com/correctcomputation/checkedc-clang
          git fetch --depth 1 origin "${{ github.event.inputs.branch || env.branch_for_scheduled_run }}"
          git checkout FETCH_HEAD
          git clone --depth 1 https://github.com/microsoft/checkedc ${{github.workspace}}/depsfolder/checkedc-clang/llvm/projects/checkedc-wrapper/checkedc

      - name: Build 3c
        run: |
          cd ${{env.builddir}}
          cmake -G Ninja -DLLVM_TARGETS_TO_BUILD=X86 -DLLVM_ENABLE_RTTI=ON -DCMAKE_BUILD_TYPE="Debug" -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra" ${{github.workspace}}/depsfolder/checkedc-clang/llvm
          ninja 3c clang llvm-config FileCheck not count c-index-test clang-diff clang-format opt clang-check
          chmod -R 777 ${{github.workspace}}/depsfolder
          chmod -R 777 ${{env.builddir}}

  # Run Test for 3C
  test_3c:
    name: Test 3C
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: 3C tests
        run: |
          cd ${{env.builddir}}
          ninja check-clang-3c

  # Convert out benchmark programs
  test_vsftpd:
    name: Test Vsfptd
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build vsftpd
        run: |
          cd ${{env.benchmark_conv_dir}}
          tar -xvzf ${{env.benchmark_tar_dir}}/vsftpd-3.0.3.tar.gz
          cd vsftpd-3.0.3
          bear make

      - name: Convert vsftpd
        run: |
          cd ${{github.workspace}}/depsfolder/checkedc-clang/clang/tools/3c/utils/port_tools
          python convert_project.py --includeDir ${{github.workspace}}/depsfolder/checkedc-clang/llvm/projects/checkedc-wrapper/checkedc/include -p ${{env.builddir}}/bin/3c -pr ${{env.benchmark_conv_dir}}/vsftpd-3.0.3

  test_ptrdist:
    name: Test PtrDist
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build PtrDist
        run: |
          cd ${{env.benchmark_conv_dir}}
          tar -xvzf ${{env.benchmark_tar_dir}}/ptrdist-1.1.tar.gz
          cd ptrdist-1.1
          for i in anagram bc ft ks yacr2 ; do cd $i ; bear make LOCAL_CFLAGS="-std=c99" ; cd .. ; done

      - name: Test anagram
        run: |
          cd ${{github.workspace}}/depsfolder/checkedc-clang/clang/tools/3c/utils/port_tools
          python convert_project.py --includeDir ${{github.workspace}}/depsfolder/checkedc-clang/llvm/projects/checkedc-wrapper/checkedc/include -p ${{env.builddir}}/bin/3c -pr ${{env.benchmark_conv_dir}}/ptrdist-1.1/anagram

      - name: Test bc
        run: |
          cd ${{github.workspace}}/depsfolder/checkedc-clang/clang/tools/3c/utils/port_tools
          python convert_project.py --includeDir ${{github.workspace}}/depsfolder/checkedc-clang/llvm/projects/checkedc-wrapper/checkedc/include -p ${{env.builddir}}/bin/3c -pr ${{env.benchmark_conv_dir}}/ptrdist-1.1/bc

      - name: Test ft
        run: |
          cd ${{github.workspace}}/depsfolder/checkedc-clang/clang/tools/3c/utils/port_tools
          python convert_project.py --includeDir ${{github.workspace}}/depsfolder/checkedc-clang/llvm/projects/checkedc-wrapper/checkedc/include -p ${{env.builddir}}/bin/3c -pr ${{env.benchmark_conv_dir}}/ptrdist-1.1/ft

      - name: Test ks
        run: |
          cd ${{github.workspace}}/depsfolder/checkedc-clang/clang/tools/3c/utils/port_tools
          python convert_project.py --includeDir ${{github.workspace}}/depsfolder/checkedc-clang/llvm/projects/checkedc-wrapper/checkedc/include -p ${{env.builddir}}/bin/3c -pr ${{env.benchmark_conv_dir}}/ptrdist-1.1/ks

      - name: Test yacr2
        run: |
          cd ${{github.workspace}}/depsfolder/checkedc-clang/clang/tools/3c/utils/port_tools
          python convert_project.py --includeDir ${{github.workspace}}/depsfolder/checkedc-clang/llvm/projects/checkedc-wrapper/checkedc/include -p ${{env.builddir}}/bin/3c -pr ${{env.benchmark_conv_dir}}/ptrdist-1.1/yacr2

  test_libarchive:
    name: Test LibArchive
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibArchive
        run: |
          cd ${{env.benchmark_conv_dir}}
          tar -xvzf ${{env.benchmark_tar_dir}}/libarchive-3.4.3.tar.gz
          cd libarchive-3.4.3
          cd build
          cmake -DCMAKE_C_FLAGS="-w" ..
          bear make

      - name: Test LibArchive
        run: |
          cd ${{github.workspace}}/depsfolder/checkedc-clang/clang/tools/3c/utils/port_tools
          python convert_project.py --skip '/.*/test/.*' --skip '/.*/test_utils/.*' --includeDir ${{github.workspace}}/depsfolder/checkedc-clang/llvm/projects/checkedc-wrapper/checkedc/include -p ${{env.builddir}}/bin/3c -pr ${{env.benchmark_conv_dir}}/libarchive-3.4.3/build

  test_lua:
    name: Test Lua
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build Lua
        run: |
          cd ${{env.benchmark_conv_dir}}
          tar -xvzf ${{env.benchmark_tar_dir}}/lua-5.4.1.tar.gz
          cd lua-5.4.1
          bear make linux
          cd src ; clang-rename-10 -pl -i --qualified-name=main --new-name=luac_main luac.c ; cd ..
      - name: Test Lua
        run: |
          cd ${{github.workspace}}/depsfolder/checkedc-clang/clang/tools/3c/utils/port_tools
          python convert_project.py --includeDir ${{github.workspace}}/depsfolder/checkedc-clang/llvm/projects/checkedc-wrapper/checkedc/include -p ${{env.builddir}}/bin/3c -pr ${{env.benchmark_conv_dir}}/lua-5.4.1

  test_libtiff:
    name: Test LibTiff
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build LibTiff
        run: |
          cd ${{env.benchmark_conv_dir}}
          tar -xvzf ${{env.benchmark_tar_dir}}/tiff-4.1.0.tar.gz
          cd tiff-4.1.0
          cmake -DCMAKE_C_FLAGS="-w" .
          bear make tiff
          cd tools ;  for i in *.c  ; do clang-rename-10 -pl -i --qualified-name=main --new-name=$(basename -s .c $i)_main $i ; done ; cd ..

      - name: Test LibTiff
        run: |
          cd ${{github.workspace}}/depsfolder/checkedc-clang/clang/tools/3c/utils/port_tools
          python convert_project.py --skip '/.*/tif_stream.cxx' --skip '.*/test/.*\.c' --skip '.*/contrib/.*\.c' --includeDir ${{github.workspace}}/depsfolder/checkedc-clang/llvm/projects/checkedc-wrapper/checkedc/include -p ${{env.builddir}}/bin/3c -pr ${{env.benchmark_conv_dir}}/tiff-4.1.0

  test_zlib:
    name: Test ZLib
    needs: build_3c
    runs-on: self-hosted
    steps:
      - name: Build ZLib
        run: |
          cd ${{env.benchmark_conv_dir}}
          tar -xvzf ${{env.benchmark_tar_dir}}/zlib-1.2.11.tar.gz
          cd zlib-1.2.11
          mkdir build
          cd build
          cmake -DCMAKE_C_FLAGS="-w" ..
          bear make

      - name: Test zlib
        run: |
          cd ${{github.workspace}}/depsfolder/checkedc-clang/clang/tools/3c/utils/port_tools
          python convert_project.py --skip '/.*/test/.*' --includeDir ${{github.workspace}}/depsfolder/checkedc-clang/llvm/projects/checkedc-wrapper/checkedc/include -p ${{env.builddir}}/bin/3c -pr ${{env.benchmark_conv_dir}}/zlib-1.2.11/build
